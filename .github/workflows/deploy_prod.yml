# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy-PROD

on:
  push:
    branches: [ master ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}

jobs:
  checkout-and-setup:
    name: 🔧 Checkout and Setup
    runs-on: ubuntu-latest
    steps:
      - name: "☁️ Checkout Repository"
        uses: actions/checkout@v3

      - name: Set up JDK and Maven
        id: setup
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

  install-test-and-build:
    name: 🌱 Install, Test and Build
    runs-on: ubuntu-latest
    needs: checkout-and-setup
    steps:
      - uses: actions/checkout@v3

      - name: ⬇️ Install dependencies
        run: |
          mvn -X clean install

      - name: 📂 Test with Maven
        run: |
          mvn test

      - name: 📂 Build with Maven
        run: |
          mvn -B package --file pom.xml -DskipTests

  docker-login:
    name: 🐳 Docker Login
    runs-on: ubuntu-latest
    needs: install-test-and-build
    environment:
      name: portfolio-service
    steps:
      - name: 🐳 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: portfolio-service
    needs: [ install-test-and-build, docker-login ]
    steps:
      - uses: actions/checkout@v3

      - name: 📝 Set Release Version
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: 🚀 Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
          #tags: latest
          tags: ${{ env.RELEASE_VERSION }}, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          multiPlatform: true
          platform: linux/amd64,linux/arm64