# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy-PROD

on:
  push:
    branches: [ master ]

jobs:
  setting-up:
    name: ☁️ Setting Up
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 🚀 Setting Up Deployment Package
        run: echo Process Started!!!

  java:
    name: 🔧 Java 11
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: 🔧 Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
  install:
    name: 🌱 Install
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      repository-projects: write
      packages: write
    needs: [ setting-up, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Install with Maven
        run: mvn -X clean install
  test:
    name: 📂 Test
    runs-on: ubuntu-latest
    needs: [ install, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: 📂 Test with Maven
        run: mvn test
  build:
    name: 📂 Build
    runs-on: ubuntu-latest
    needs: [ test, java ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Build with Maven
        run: mvn -B package --file pom.xml
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment:
      name: portfolio-service
    needs: [ java, build ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven
      #- name: Build with Maven
      #  run: mvn clean install #-DskipTests
      - name: Set Release version env variable
        run: |
          echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🚀 Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}
          #tags: latest
          tags: ${{ env.RELEASE_VERSION }}, latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          multiPlatform: true
          platform: linux/amd64,linux/arm64